bool searchInBST(BinaryTreeNode<int> *root, int x) {
    /*
    // recursive solution:
    if(root==NULL)
    {
        return false;
    }
    if(root->data==x)
    {
        return true;
    }

    if(root->data>x)
    {
        //left ma jaou
        return searchInBST(root->left,x);

    }
    else
    {
        // right ma jaoou
        return searchInBST(root->right,x);
    }
    */



// iterative solution:
// this more optimized because it use constant space;
    BinaryTreeNode<int>*temp=root;
    while(temp!=NULL)
    {

        if(temp->data==x)
        {
            return true;
        }

        if(temp->data>x)
        {
            temp=temp->left;
        }
        else{
            
            temp=temp->right;
        }
    }
}
